name: Terraform Analysis

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:      # Allows you to manually trigger the workflow

env:
  TF_WORKING_DIR: infra

jobs:
  tflint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - run: echo "HASHABLE_DEPENDENCIES_PATH=${{ env.TF_WORKING_DIR }}/.tflint.hcl" >> $GITHUB_ENV

      - name: Cache plugin dir
        uses: actions/cache@v4    # This action allows caching dependencies and build outputs to improve workflow execution time.
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles( env.HASHABLE_DEPENDENCIES_PATH ) }}  # Using the hashFiles function allows you to create a new cache when dependencies change.
  
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
            tflint_wrapper: true
  
      - name: Init TFLint
        working-directory: infra
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}
  
      - name: Run TFLint
        working-directory: infra
        run: tflint -f compact --recursive

      # # Step 5: Run tfsec (security checks for Terraform code)
      # - name: Run tfsec
      #   working-directory: infra
      #   run: |
      #     tfsec

      # # Step 6: Run Checkov (misconfiguration checks)
      # - name: Run Checkov
      #   working-directory: infra
      #   run: |
      #     checkov

      # # Step 7: Run Infracost (cost estimation)
      # - name: Run Infracost
      #   working-directory: infra
      #   run: |
      #     infracost breakdown --format json > infracost_output.json
      #     infracost show --path infracost_output.json --format table
