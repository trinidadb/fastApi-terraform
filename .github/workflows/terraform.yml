name: Terraform Analysis

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:      # Allows you to manually trigger the workflow

env:
  TF_WORKING_DIR: infra

permissions:
  security-events: write


jobs:
  tf-lint:
    name: tflint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - run: echo "HASHABLE_DEPENDENCIES_PATH=${{ env.TF_WORKING_DIR }}/.tflint.hcl" >> $GITHUB_ENV

      - name: Cache plugin dir
        uses: actions/cache@v4    # This action allows caching dependencies and build outputs to improve workflow execution time.
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles( env.HASHABLE_DEPENDENCIES_PATH ) }}  # Using the hashFiles function allows you to create a new cache when dependencies change.
  
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
            tflint_wrapper: true
  
      - name: Init TFLint
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}
  
      - name: Run TFLint
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: tflint -f compact --recursive

  tf-security-scan:
    # Tfsec is included in trivy
    name: trivy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in IaC mode for terraform
        uses: aquasecurity/trivy-action@0.28.0
        with:
          # Configured to scan infrastructure-as-code (IaC) files
          scan-type: 'config'
          hide-progress: true
          # Generates results in SARIF (a standardized format that integrates well with GitHub’s Security tab)
          format: 'sarif'
          output: 'trivy-results.sarif'
          # Setting it to '1' ensures that the action fails if it finds issues at these levels, which is useful for CI/CD enforcement.
          exit-code: '1'
          # Reduces clutter by skipping issues that don’t yet have fixes.
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
        continue-on-error: true  # Continue to next steps even if this step fails

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        # The results from the other step will appear in GitHub’s Security tab.
        with:
          sarif_file: 'trivy-results.sarif'



      # # Step 6: Run Checkov (misconfiguration checks)
      # - name: Run Checkov
      #   working-directory: infra
      #   run: |
      #     checkov

      # # Step 7: Run Infracost (cost estimation)
      # - name: Run Infracost
      #   working-directory: infra
      #   run: |
      #     infracost breakdown --format json > infracost_output.json
      #     infracost show --path infracost_output.json --format table
